<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>
<!--          配置Spring容器加载器           -->

<!--  Spring01中的Controller层，每次测试代码时，都需要以下代码
      context-param标签和listener标签等同于以下代码-->
<!--  ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext("ApplicationContext.xml");
<!    StudentService studentService = (StudentService) context.getBean("stuServiceAnno");
<!    studentService.fetchStudents();-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:config/ApplicationContext.xml</param-value>
  </context-param>
<!--  项目启动时，会执行web.xml文件，所以在这声明监听器，监听所有context，加载WebApplicationContext
      加载的容器就是context-param中声明的config/ApplicationContext.xml文件
      这样，就不需要我们自己像Spring01的controlle中那样创建new容器了-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

<!--          配置SpringMVC          -->
  <servlet>
    <servlet-name>SpirngSSM</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:config/SpringMVC.xml</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>SpirngSSM</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
